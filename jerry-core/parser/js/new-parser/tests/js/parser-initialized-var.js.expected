
--- Script parsing start ---

  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK

--- Function parsing start ---

  [  0] CBC_RETURN_WITH_LITERAL idx:0->var_ident(g)

Final byte code dump:

  Maximum stack depth: 0
  Flags: [small_lit_enc]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 1
  Const literal range end: 1
  Literal range end: 2

   0 : CBC_INITIALIZE_VAR idx:0(ident)->var_ident(g) idx:1(self)->function
   3 : CBC_RETURN_WITH_LITERAL idx:0(ident)->var_ident(g)

Byte code size: 5 bytes

--- Function parsing end ---

  [  1] CBC_PUSH_LITERAL idx:1->function
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK

--- Function parsing start ---

  Note: legacy (non-strict) argument definition

  [  0] CBC_RETURN_WITH_LITERAL idx:1->var_ident(f)

Final byte code dump:

  Maximum stack depth: 1
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 1
  Register range end: 1
  Identifier range end: 1
  Const literal range end: 1
  Literal range end: 1

   0 : CBC_RETURN_WITH_LITERAL idx:0(arg)->var_ident(f)

Byte code size: 2 bytes

--- Function parsing end ---

  [  1] CBC_PUSH_LITERAL idx:2->function
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK

--- Function parsing start ---

  Note: legacy (non-strict) argument definition

  [  1] CBC_ADD_TWO_LITERALS idx:2->var_ident(a) idx:3->var_ident(f)
  [  0] CBC_RETURN

Final byte code dump:

  Maximum stack depth: 4
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 3
  Register range end: 3
  Identifier range end: 3
  Const literal range end: 3
  Literal range end: 3

   0 : CBC_ADD_TWO_LITERALS idx:1(arg)->var_ident(a) idx:2(arg)->var_ident(f)
   3 : CBC_RETURN

Byte code size: 4 bytes

--- Function parsing end ---

  [  1] CBC_PUSH_LITERAL idx:3->function
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK

--- Function parsing start ---


--- Function parsing start ---


Final byte code dump:

  Maximum stack depth: 0
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 0
  Const literal range end: 0
  Literal range end: 0

   0 : CBC_RETURN_WITH_BLOCK

Byte code size: 1 bytes

--- Function parsing end ---


--- Function parsing start ---


Final byte code dump:

  Maximum stack depth: 0
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 0
  Const literal range end: 0
  Literal range end: 0

   0 : CBC_RETURN_WITH_BLOCK

Byte code size: 1 bytes

--- Function parsing end ---

  [  1] CBC_MULTIPLY_TWO_LITERALS idx:1->var_ident(f) idx:0->var_ident(x)
  [  0] CBC_RETURN

Final byte code dump:

  Maximum stack depth: 2
  Flags: [small_lit_enc]
  Argument range end: 1
  Register range end: 1
  Identifier range end: 3
  Const literal range end: 3
  Literal range end: 4

   0 : CBC_INITIALIZE_VAR idx:1(ident)->var_ident(x) idx:0(arg)->undefined
   3 : CBC_INITIALIZE_VAR idx:2(ident)->var_ident(f) idx:3(lit)->function
   6 : CBC_MULTIPLY_TWO_LITERALS idx:2(ident)->var_ident(f) idx:1(ident)->var_ident(x)
   9 : CBC_RETURN

Byte code size: 10 bytes

--- Function parsing end ---

  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK

--- Function parsing start ---

  Note: legacy (non-strict) argument definition


--- Function parsing start ---


Final byte code dump:

  Maximum stack depth: 0
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 0
  Const literal range end: 0
  Literal range end: 0

   0 : CBC_RETURN_WITH_BLOCK

Byte code size: 1 bytes

--- Function parsing end ---


--- Function parsing start ---


Final byte code dump:

  Maximum stack depth: 0
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 0
  Const literal range end: 0
  Literal range end: 0

   0 : CBC_RETURN_WITH_BLOCK

Byte code size: 1 bytes

--- Function parsing end ---


--- Function parsing start ---


Final byte code dump:

  Maximum stack depth: 0
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 0
  Const literal range end: 0
  Literal range end: 0

   0 : CBC_RETURN_WITH_BLOCK

Byte code size: 1 bytes

--- Function parsing end ---

  [  1] CBC_ADD_TWO_LITERALS idx:5->var_ident(a) idx:3->var_ident(g)
  [  0] CBC_RETURN

Final byte code dump:

  Maximum stack depth: 3
  Flags: [small_lit_enc]
  Argument range end: 2
  Register range end: 2
  Identifier range end: 4
  Const literal range end: 4
  Literal range end: 6

   0 : CBC_INITIALIZE_VAR idx:2(ident)->var_ident(g) idx:4(lit)->function
   3 : CBC_INITIALIZE_VAR idx:3(ident)->var_ident(a) idx:5(lit)->function
   6 : CBC_ADD_TWO_LITERALS idx:3(ident)->var_ident(a) idx:2(ident)->var_ident(g)
   9 : CBC_RETURN

Byte code size: 10 bytes

--- Function parsing end ---

  [  1] CBC_PUSH_LITERAL idx:6->function
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK

--- Function parsing start ---


--- Function parsing start ---


Final byte code dump:

  Maximum stack depth: 0
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 0
  Const literal range end: 0
  Literal range end: 0

   0 : CBC_RETURN_WITH_BLOCK

Byte code size: 1 bytes

--- Function parsing end ---


--- Function parsing start ---


Final byte code dump:

  Maximum stack depth: 0
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 0
  Const literal range end: 0
  Literal range end: 0

   0 : CBC_RETURN_WITH_BLOCK

Byte code size: 1 bytes

--- Function parsing end ---

  [  1] CBC_ADD_TWO_LITERALS idx:4->var_ident(f) idx:2->var_ident(g)
  [  0] CBC_RETURN

Final byte code dump:

  Maximum stack depth: 1
  Flags: [small_lit_enc]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 3
  Const literal range end: 3
  Literal range end: 6

   0 : CBC_INITIALIZE_VARS from: 0 to: 2
         idx:0(ident)->var_ident(m) = idx:3(self)->function
         idx:1(ident)->var_ident(g) = idx:4(lit)->function
         idx:2(ident)->var_ident(f) = idx:5(lit)->function
   6 : CBC_ADD_TWO_LITERALS idx:2(ident)->var_ident(f) idx:1(ident)->var_ident(g)
   9 : CBC_RETURN

Byte code size: 10 bytes

--- Function parsing end ---

  [  1] CBC_PUSH_LITERAL idx:7->function
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK

--- Function parsing start ---

  [  1] CBC_PUSH_NUMBER_1 number:5
  [  0] CBC_ASSIGN_SET_IDENT idx:0->var_ident(a1)
  [  1] CBC_PUSH_NUMBER_1 number:5
  [  0] CBC_ASSIGN_SET_IDENT idx:1->var_ident(a2)
  [  1] CBC_PUSH_NUMBER_1 number:5
  [  0] CBC_ASSIGN_SET_IDENT idx:2->var_ident(a3)

--- Function parsing start ---


Final byte code dump:

  Maximum stack depth: 0
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 0
  Const literal range end: 0
  Literal range end: 0

   0 : CBC_RETURN_WITH_BLOCK

Byte code size: 1 bytes

--- Function parsing end ---


--- Function parsing start ---


Final byte code dump:

  Maximum stack depth: 0
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 0
  Const literal range end: 0
  Literal range end: 0

   0 : CBC_RETURN_WITH_BLOCK

Byte code size: 1 bytes

--- Function parsing end ---


--- Function parsing start ---


Final byte code dump:

  Maximum stack depth: 0
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 0
  Const literal range end: 0
  Literal range end: 0

   0 : CBC_RETURN_WITH_BLOCK

Byte code size: 1 bytes

--- Function parsing end ---


Final byte code dump:

  Maximum stack depth: 1
  Flags: [small_lit_enc]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 3
  Const literal range end: 3
  Literal range end: 6

   0 : CBC_INITIALIZE_VARS from: 0 to: 2
         idx:0(ident)->var_ident(a1) = idx:3(lit)->function
         idx:1(ident)->var_ident(a2) = idx:4(lit)->function
         idx:2(ident)->var_ident(a3) = idx:5(lit)->function
   6 : CBC_PUSH_NUMBER_1 number:5
   8 : CBC_ASSIGN_SET_IDENT idx:0(ident)->var_ident(a1)
  10 : CBC_PUSH_NUMBER_1 number:5
  12 : CBC_ASSIGN_SET_IDENT idx:1(ident)->var_ident(a2)
  14 : CBC_PUSH_NUMBER_1 number:5
  16 : CBC_ASSIGN_SET_IDENT idx:2(ident)->var_ident(a3)
  18 : CBC_RETURN_WITH_BLOCK

Byte code size: 19 bytes

--- Function parsing end ---

  [  1] CBC_PUSH_LITERAL idx:8->function
  [  0] CBC_POP_BLOCK

Final byte code dump:

  Maximum stack depth: 1
  Flags: [small_lit_enc]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 2
  Const literal range end: 2
  Literal range end: 9

   0 : CBC_INITIALIZE_VAR idx:0(ident)->var_ident(f) idx:5(lit)->function
   3 : CBC_PUSH_LITERAL idx:1(ident)->ident(next_statement)
   5 : CBC_POP_BLOCK
   6 : CBC_PUSH_LITERAL idx:2(lit)->function
   8 : CBC_POP_BLOCK
   9 : CBC_PUSH_LITERAL idx:1(ident)->ident(next_statement)
  11 : CBC_POP_BLOCK
  12 : CBC_PUSH_LITERAL idx:3(lit)->function
  14 : CBC_POP_BLOCK
  15 : CBC_PUSH_LITERAL idx:1(ident)->ident(next_statement)
  17 : CBC_POP_BLOCK
  18 : CBC_PUSH_LITERAL idx:4(lit)->function
  20 : CBC_POP_BLOCK
  21 : CBC_PUSH_LITERAL idx:1(ident)->ident(next_statement)
  23 : CBC_POP_BLOCK
  24 : CBC_PUSH_LITERAL idx:1(ident)->ident(next_statement)
  26 : CBC_POP_BLOCK
  27 : CBC_PUSH_LITERAL idx:6(lit)->function
  29 : CBC_POP_BLOCK
  30 : CBC_PUSH_LITERAL idx:1(ident)->ident(next_statement)
  32 : CBC_POP_BLOCK
  33 : CBC_PUSH_LITERAL idx:7(lit)->function
  35 : CBC_POP_BLOCK
  36 : CBC_PUSH_LITERAL idx:1(ident)->ident(next_statement)
  38 : CBC_POP_BLOCK
  39 : CBC_PUSH_LITERAL idx:8(lit)->function
  41 : CBC_POP_BLOCK
  42 : CBC_RETURN_WITH_BLOCK

Byte code size: 43 bytes

Script parsing successfully completed. Total byte code size: 113 bytes

--- Script parsing end ---

