
--- Script parsing start ---


--- Function parsing start ---

  Note: legacy (non-strict) argument definition

  [  0] CBC_ASSIGN_LITERAL_SET_IDENT idx:3->string(x) idx:2->var_ident(a)
  [  1] CBC_ADD_TWO_LITERALS idx:1->var_ident(arguments) idx:2->var_ident(a)
  [  0] CBC_RETURN

Final byte code dump:

  Maximum stack depth: 2
  Flags: [small_lit_enc]
  Argument range end: 1
  Register range end: 1
  Identifier range end: 4
  Const literal range end: 5
  Literal range end: 6

   0 : CBC_DEFINE_VARS from: 1 to: 1
         idx:1(ident)->var_ident(a)
   2 : CBC_INITIALIZE_VAR idx:2(ident)->var_ident(eval) idx:5(self)->function
   5 : CBC_INITIALIZE_VAR idx:3(ident)->var_ident(arguments) idx:0(arg)->undefined
   8 : CBC_ASSIGN_LITERAL_SET_IDENT idx:4(lit)->string(x) idx:1(ident)->var_ident(a)
  11 : CBC_ADD_TWO_LITERALS idx:3(ident)->var_ident(arguments) idx:1(ident)->var_ident(a)
  14 : CBC_RETURN

Byte code size: 15 bytes

--- Function parsing end ---


--- Function parsing start ---

  Note: legacy (non-strict) argument definition

  [  0] CBC_ASSIGN_LITERAL_SET_IDENT idx:3->string(y) idx:2->var_ident(a)
  [  1] CBC_ADD_TWO_LITERALS idx:1->var_ident(eval) idx:2->var_ident(a)
  [  0] CBC_RETURN

Final byte code dump:

  Maximum stack depth: 3
  Flags: [small_lit_enc,arguments_needed]
  Argument range end: 1
  Register range end: 2
  Identifier range end: 4
  Const literal range end: 5
  Literal range end: 5

   0 : CBC_INITIALIZE_VAR idx:2(ident)->var_ident(eval) idx:0(arg)->undefined
   3 : CBC_ASSIGN_LITERAL_SET_IDENT idx:4(lit)->string(y) idx:1(reg)->var_ident(a)
   6 : CBC_ADD_TWO_LITERALS idx:2(ident)->var_ident(eval) idx:1(reg)->var_ident(a)
   9 : CBC_RETURN

Byte code size: 10 bytes

--- Function parsing end ---

  [  2] CBC_PUSH_TWO_LITERALS idx:0->function idx:1->function
  [  1] CBC_CALL1_PUSH_RESULT

--- Function parsing start ---

  Note: legacy (non-strict) argument definition

  Note: switch to strict mode


--- Script parsing end ---

Parse error 'Non strict argument definition.' at line: 7 col: 38
