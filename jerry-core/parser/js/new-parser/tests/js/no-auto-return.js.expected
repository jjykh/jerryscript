
--- Script parsing start ---


--- Function parsing start ---

  [  1] CBC_ADD_TWO_LITERALS idx:0->ident(a) idx:1->ident(b)
  [  0] CBC_POP

Final byte code dump:

  Maximum stack depth: 1
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 2
  Const literal range end: 2
  Literal range end: 2

   0 : CBC_ADD_TWO_LITERALS idx:0(ident)->ident(a) idx:1(ident)->ident(b)
   3 : CBC_POP
   4 : CBC_RETURN_WITH_BLOCK

Byte code size: 5 bytes

--- Function parsing end ---


--- Function parsing start ---

  [  1] CBC_PUSH_NUMBER_0
  [  2] CBC_MULTIPLY_TWO_LITERALS idx:0->ident(y) idx:1->number(128)
  [  1] CBC_ADD
  [  0] CBC_RETURN

Final byte code dump:

  Maximum stack depth: 2
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 1
  Const literal range end: 2
  Literal range end: 2

   0 : CBC_PUSH_NUMBER_0
   1 : CBC_MULTIPLY_TWO_LITERALS idx:0(ident)->ident(y) idx:1(lit)->number(128)
   4 : CBC_ADD
   5 : CBC_RETURN

Byte code size: 6 bytes

--- Function parsing end ---


--- Function parsing start ---

  [  1] CBC_PUSH_LITERAL idx:0->ident(x)
  [  0] CBC_BRANCH_IF_FALSE_FORWARD
  [  1] CBC_PUSH_NUMBER_1 number:127
  [  2] CBC_PUSH_NUMBER_1 number:-127
  [  1] CBC_ADD
  [  2] CBC_PUSH_NUMBER_1 number:127
  [  1] CBC_ADD
  [  0] CBC_RETURN

Final byte code dump:

  Maximum stack depth: 2
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 1
  Const literal range end: 1
  Literal range end: 1

   0 : CBC_PUSH_LITERAL idx:0(ident)->ident(x)
   2 : CBC_BRANCH_IF_FALSE_FORWARD offset:11(->13)
   4 : CBC_PUSH_NUMBER_1 number:127
   6 : CBC_PUSH_NUMBER_1 number:-127
   8 : CBC_ADD
   9 : CBC_PUSH_NUMBER_1 number:127
  11 : CBC_ADD
  12 : CBC_RETURN
  13 : CBC_RETURN_WITH_BLOCK

Byte code size: 14 bytes

--- Function parsing end ---


--- Function parsing start ---

  [  0] CBC_JUMP_FORWARD
  [  0] CBC_RETURN_WITH_BLOCK
  [  0] CBC_JUMP_BACKWARD

Final byte code dump:

  Maximum stack depth: 0
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 0
  Const literal range end: 0
  Literal range end: 0

   0 : CBC_JUMP_FORWARD offset:3(->3)
   2 : CBC_RETURN_WITH_BLOCK
   3 : CBC_JUMP_BACKWARD offset:1(->2)
   5 : CBC_RETURN_WITH_BLOCK

Byte code size: 6 bytes

--- Function parsing end ---


--- Function parsing start ---

  [  1] CBC_PUSH_LITERAL idx:0->ident(x)
  [  0] CBC_BRANCH_IF_FALSE_FORWARD
  [  1] CBC_PUSH_NUMBER_1 number:1
  [  0] CBC_RETURN
  [  0] CBC_JUMP_FORWARD
  [  1] CBC_PUSH_NUMBER_1 number:2
  [  0] CBC_RETURN

Final byte code dump:

  Maximum stack depth: 1
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 1
  Const literal range end: 1
  Literal range end: 1

   0 : CBC_PUSH_LITERAL idx:0(ident)->ident(x)
   2 : CBC_BRANCH_IF_FALSE_FORWARD offset:7(->9)
   4 : CBC_PUSH_NUMBER_1 number:1
   6 : CBC_RETURN
   7 : CBC_JUMP_FORWARD offset:5(->12)
   9 : CBC_PUSH_NUMBER_1 number:2
  11 : CBC_RETURN
  12 : CBC_RETURN_WITH_BLOCK

Byte code size: 13 bytes

--- Function parsing end ---


Final byte code dump:

  Maximum stack depth: 0
  Flags: [small_lit_enc]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 5
  Const literal range end: 5
  Literal range end: 10

   0 : CBC_INITIALIZE_VARS from: 0 to: 4
         idx:0(ident)->var_ident(f) = idx:5(lit)->function
         idx:1(ident)->var_ident(g) = idx:6(lit)->function
         idx:2(ident)->var_ident(h) = idx:7(lit)->function
         idx:3(ident)->var_ident(i) = idx:8(lit)->function
         idx:4(ident)->var_ident(k) = idx:9(lit)->function
   8 : CBC_RETURN_WITH_BLOCK

Byte code size: 9 bytes

Script parsing successfully completed. Total byte code size: 53 bytes

--- Script parsing end ---

