
--- Script parsing start ---


--- Function parsing start ---

  Note: legacy (non-strict) argument definition

  [  1] CBC_PUSH_LITERAL idx:4->var_ident(val)
  [  2] CBC_EXT_WITH_CREATE_CONTEXT
  [  2] CBC_ASSIGN_LITERAL_SET_IDENT idx:3->var_ident(arg) idx:5->ident(v1)
  [  5] CBC_EXT_TRY_CREATE_CONTEXT
  [  6] CBC_PUSH_LITERAL idx:6->ident(ident)
  [  7] CBC_EXT_WITH_CREATE_CONTEXT
  [ 10] CBC_PUSH_THREE_LITERALS idx:3->var_ident(arg) idx:7->string(other) idx:5->ident(v1)
  [ 10] CBC_PUSH_PROP_LITERAL idx:8->string(val)
  [  7] CBC_ASSIGN
  [  5] CBC_CONTEXT_END
  [  5] CBC_EXT_FINALLY
  [  2] CBC_CONTEXT_END
  [  4] CBC_PUSH_TWO_LITERALS idx:3->var_ident(arg) idx:7->string(other)
  [  2] CBC_POST_INCR
  [  0] CBC_CONTEXT_END
  [  0] CBC_ASSIGN_LITERAL_SET_IDENT idx:4->var_ident(val) idx:9->var_ident(other)

Final byte code dump:

  Maximum stack depth: 16
  Flags: [small_lit_enc]
  Argument range end: 5
  Register range end: 6
  Identifier range end: 9
  Const literal range end: 11
  Literal range end: 11

   0 : CBC_DEFINE_VARS from: 6 to: 7
         idx:6(ident)->var_ident(v1)
         idx:7(ident)->var_ident(ident)
   2 : CBC_INITIALIZE_VAR idx:8(ident)->var_ident(arg) idx:3(arg)->undefined
   5 : CBC_PUSH_LITERAL idx:4(arg)->var_ident(val)
   7 : CBC_EXT_WITH_CREATE_CONTEXT offset:31(->38)
  10 : CBC_ASSIGN_LITERAL_SET_IDENT idx:8(ident)->var_ident(arg) idx:6(ident)->var_ident(v1)
  13 : CBC_EXT_TRY_CREATE_CONTEXT offset:16(->29)
  16 : CBC_PUSH_LITERAL idx:7(ident)->var_ident(ident)
  18 : CBC_EXT_WITH_CREATE_CONTEXT offset:11(->29)
  21 : CBC_PUSH_THREE_LITERALS idx:8(ident)->var_ident(arg) idx:9(lit)->string(other) idx:6(ident)->var_ident(v1)
  25 : CBC_PUSH_PROP_LITERAL idx:10(lit)->string(val)
  27 : CBC_ASSIGN
  28 : CBC_CONTEXT_END
  29 : CBC_EXT_FINALLY offset:4(->33)
  32 : CBC_CONTEXT_END
  33 : CBC_PUSH_TWO_LITERALS idx:8(ident)->var_ident(arg) idx:9(lit)->string(other)
  36 : CBC_POST_INCR
  37 : CBC_CONTEXT_END
  38 : CBC_ASSIGN_LITERAL_SET_IDENT idx:4(arg)->var_ident(val) idx:5(reg)->var_ident(other)
  41 : CBC_RETURN_WITH_BLOCK

Byte code size: 42 bytes

--- Function parsing end ---

  [  1] CBC_PUSH_LITERAL idx:2->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:3->ident(a)
  [  2] CBC_EXT_WITH_CREATE_CONTEXT
  [  5] CBC_PUSH_IDENT_REFERENCE idx:4->ident(f)
  [  6] CBC_PUSH_LITERAL idx:3->ident(a)
  [  9] CBC_PUSH_IDENT_REFERENCE idx:5->ident(g)
  [  7] CBC_CALL0_PROP_PUSH_RESULT
  [  2] CBC_CALL2_PROP_BLOCK
  [  5] CBC_PUSH_IDENT_REFERENCE idx:6->ident(eval)
  [  7] CBC_PUSH_TWO_LITERALS idx:3->ident(a) idx:7->ident(b)
  [ 10] CBC_PUSH_IDENT_REFERENCE idx:6->ident(eval)
  [ 11] CBC_PUSH_LITERAL idx:8->string(1)
  [ 11] CBC_EVAL
  [  8] CBC_CALL1_PROP_PUSH_RESULT
  [  8] CBC_EVAL
  [  2] CBC_CALL_PROP_BLOCK byte_arg:3
  [  0] CBC_CONTEXT_END
  [  1] CBC_PUSH_LITERAL idx:2->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:3->ident(a)
  [  2] CBC_EXT_WITH_CREATE_CONTEXT

--- Function parsing start ---

  [  1] CBC_PUSH_NUMBER_1 number:5
  [  0] CBC_ASSIGN_SET_IDENT idx:0->var_ident(a)
  [  3] CBC_PUSH_IDENT_REFERENCE idx:1->ident(f)
  [  4] CBC_PUSH_LITERAL idx:0->var_ident(a)
  [  0] CBC_CALL1_PROP
  [  3] CBC_PUSH_IDENT_REFERENCE idx:2->ident(eval)
  [  4] CBC_PUSH_LITERAL idx:0->var_ident(a)
  [  4] CBC_EVAL
  [  0] CBC_CALL1_PROP

Final byte code dump:

  Maximum stack depth: 4
  Flags: [small_lit_enc,arguments_needed]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 3
  Const literal range end: 3
  Literal range end: 3

   0 : CBC_DEFINE_VARS from: 0 to: 0
         idx:0(ident)->var_ident(a)
   2 : CBC_PUSH_NUMBER_1 number:5
   4 : CBC_ASSIGN_SET_IDENT idx:0(ident)->var_ident(a)
   6 : CBC_PUSH_IDENT_REFERENCE idx:1(ident)->ident(f)
   8 : CBC_PUSH_LITERAL idx:0(ident)->var_ident(a)
  10 : CBC_CALL1_PROP
  11 : CBC_PUSH_IDENT_REFERENCE idx:2(ident)->ident(eval)
  13 : CBC_PUSH_LITERAL idx:0(ident)->var_ident(a)
  15 : CBC_EVAL
  16 : CBC_CALL1_PROP
  17 : CBC_RETURN_WITH_BLOCK

Byte code size: 18 bytes

--- Function parsing end ---

  [  2] CBC_ASSIGN_LITERAL_SET_IDENT_BLOCK idx:9->function idx:5->ident(g)
  [  3] CBC_CREATE_OBJECT

--- Function parsing start ---

  [  3] CBC_PUSH_IDENT_REFERENCE idx:0->ident(f)
  [  4] CBC_PUSH_NUMBER_1 number:8
  [  0] CBC_CALL1_PROP

Final byte code dump:

  Maximum stack depth: 4
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 1
  Const literal range end: 1
  Literal range end: 1

   0 : CBC_PUSH_IDENT_REFERENCE idx:0(ident)->ident(f)
   2 : CBC_PUSH_NUMBER_1 number:8
   4 : CBC_CALL1_PROP
   5 : CBC_RETURN_WITH_BLOCK

Byte code size: 6 bytes

--- Function parsing end ---

  [  3] CBC_EXT_SET_GETTER idx:10->string(x) idx:11->function
  [  2] CBC_ASSIGN_SET_IDENT_BLOCK idx:5->ident(g)

--- Function parsing start ---

  [  1] CBC_PUSH_NUMBER_1 number:2
  [  0] CBC_ASSIGN_SET_IDENT idx:0->var_ident(a)
  [  2] CBC_PUSH_TWO_LITERALS idx:1->ident(f) idx:0->var_ident(a)
  [  0] CBC_CALL1

Final byte code dump:

  Maximum stack depth: 3
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 0
  Register range end: 1
  Identifier range end: 2
  Const literal range end: 2
  Literal range end: 2

   0 : CBC_PUSH_NUMBER_1 number:2
   2 : CBC_ASSIGN_SET_IDENT idx:0(reg)->var_ident(a)
   4 : CBC_PUSH_TWO_LITERALS idx:1(ident)->ident(f) idx:0(reg)->var_ident(a)
   7 : CBC_CALL1
   8 : CBC_RETURN_WITH_BLOCK

Byte code size: 9 bytes

--- Function parsing end ---

  [  0] CBC_CONTEXT_END
  [  1] CBC_PUSH_LITERAL idx:2->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:3->ident(a)
  [  2] CBC_EXT_WITH_CREATE_CONTEXT

--- Function parsing start ---


--- Function parsing start ---


--- Function parsing start ---

  [  3] CBC_PUSH_IDENT_REFERENCE idx:1->ident(f)
  [  4] CBC_PUSH_LITERAL idx:0->var_ident(a)
  [  0] CBC_CALL1_PROP

Final byte code dump:

  Maximum stack depth: 5
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 1
  Register range end: 1
  Identifier range end: 2
  Const literal range end: 2
  Literal range end: 2

   0 : CBC_PUSH_IDENT_REFERENCE idx:1(ident)->ident(f)
   2 : CBC_PUSH_LITERAL idx:0(arg)->var_ident(a)
   4 : CBC_CALL1_PROP
   5 : CBC_RETURN_WITH_BLOCK

Byte code size: 6 bytes

--- Function parsing end ---

  [  0] CBC_RETURN_WITH_LITERAL idx:0->function

Final byte code dump:

  Maximum stack depth: 0
  Flags: [small_lit_enc]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 0
  Const literal range end: 0
  Literal range end: 1

   0 : CBC_RETURN_WITH_LITERAL idx:0(lit)->function

Byte code size: 2 bytes

--- Function parsing end ---


Final byte code dump:

  Maximum stack depth: 0
  Flags: [small_lit_enc]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 1
  Const literal range end: 1
  Literal range end: 2

   0 : CBC_INITIALIZE_VAR idx:0(ident)->var_ident(x) idx:1(lit)->function
   3 : CBC_RETURN_WITH_BLOCK

Byte code size: 4 bytes

--- Function parsing end ---

  [  3] CBC_PUSH_LITERAL idx:14->function
  [  2] CBC_POP_BLOCK
  [  0] CBC_CONTEXT_END

Final byte code dump:

  Maximum stack depth: 11
  Flags: [small_lit_enc]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 8
  Const literal range end: 10
  Literal range end: 15

   0 : CBC_INITIALIZE_VAR idx:0(ident)->var_ident(func) idx:10(lit)->function
   3 : CBC_INITIALIZE_VAR idx:1(ident)->var_ident(h) idx:13(lit)->function
   6 : CBC_PUSH_LITERAL idx:2(ident)->ident(next_statement)
   8 : CBC_POP_BLOCK
   9 : CBC_PUSH_LITERAL idx:3(ident)->ident(a)
  11 : CBC_EXT_WITH_CREATE_CONTEXT offset:26(->37)
  14 : CBC_PUSH_IDENT_REFERENCE idx:4(ident)->ident(f)
  16 : CBC_PUSH_LITERAL idx:3(ident)->ident(a)
  18 : CBC_PUSH_IDENT_REFERENCE idx:5(ident)->ident(g)
  20 : CBC_CALL0_PROP_PUSH_RESULT
  21 : CBC_CALL2_PROP_BLOCK
  22 : CBC_PUSH_IDENT_REFERENCE idx:6(ident)->ident(eval)
  24 : CBC_PUSH_TWO_LITERALS idx:3(ident)->ident(a) idx:7(ident)->ident(b)
  27 : CBC_PUSH_IDENT_REFERENCE idx:6(ident)->ident(eval)
  29 : CBC_PUSH_LITERAL idx:8(lit)->string(1)
  31 : CBC_EVAL
  32 : CBC_CALL1_PROP_PUSH_RESULT
  33 : CBC_EVAL
  34 : CBC_CALL_PROP_BLOCK byte_arg:3
  36 : CBC_CONTEXT_END
  37 : CBC_PUSH_LITERAL idx:2(ident)->ident(next_statement)
  39 : CBC_POP_BLOCK
  40 : CBC_PUSH_LITERAL idx:3(ident)->ident(a)
  42 : CBC_EXT_WITH_CREATE_CONTEXT offset:14(->56)
  45 : CBC_ASSIGN_LITERAL_SET_IDENT_BLOCK idx:11(lit)->function idx:5(ident)->ident(g)
  48 : CBC_CREATE_OBJECT
  49 : CBC_EXT_SET_GETTER idx:9(lit)->string(x) idx:12(lit)->function
  53 : CBC_ASSIGN_SET_IDENT_BLOCK idx:5(ident)->ident(g)
  55 : CBC_CONTEXT_END
  56 : CBC_PUSH_LITERAL idx:2(ident)->ident(next_statement)
  58 : CBC_POP_BLOCK
  59 : CBC_PUSH_LITERAL idx:3(ident)->ident(a)
  61 : CBC_EXT_WITH_CREATE_CONTEXT offset:7(->68)
  64 : CBC_PUSH_LITERAL idx:14(lit)->function
  66 : CBC_POP_BLOCK
  67 : CBC_CONTEXT_END
  68 : CBC_RETURN_WITH_BLOCK

Byte code size: 69 bytes

Script parsing successfully completed. Total byte code size: 156 bytes

--- Script parsing end ---

